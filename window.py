# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'window.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

from lib import SkillTable, TitleWidget, DataLoader, ColorTable, ColorBar, SkillBar, SearchBar, MessageWidget
import config


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setWindowTitle("极略三国辅助工具")
        MainWindow.setWindowIcon(QtGui.QIcon(r'source/window_icon.jpeg'))
        MainWindow.setFixedSize(610, 540)
        self.main_window = MainWindow
        # 菜单栏
        self.menu_bar = QtWidgets.QStatusBar(MainWindow)
        bar = MainWindow.menuBar()

        setting = bar.addMenu("设置")
        action_collision = QtWidgets.QAction("技能禁配", MainWindow)
        action_collision.setStatusTip("开启后冲突技能将不会显示在列表中")
        action_collision.setCheckable(True)
        action_collision.setChecked(True)
        action_collision.triggered.connect(self.enable_collision)
        setting.addAction(action_collision)
        action_show_skill = QtWidgets.QAction("显示技能", MainWindow)
        action_show_skill.setStatusTip("开启后灵珠显示技能与点数")
        action_show_skill.setCheckable(True)
        action_show_skill.setChecked(True)
        action_show_skill.triggered.connect(self.enable_show_skill)
        setting.addAction(action_show_skill)

        help = bar.addMenu("帮助")
        action_help = QtWidgets.QAction("介绍", MainWindow)
        action_help.setStatusTip("显示软件介绍")
        action_help.triggered.connect(self.show_help)
        help.addAction(action_help)
        action_version = QtWidgets.QAction("版本号", MainWindow)
        action_version.setStatusTip("显示软件版本信息")
        action_version.triggered.connect(self.show_version)
        help.addAction(action_version)

        mode = bar.addMenu("模式")
        action_design = QtWidgets.QAction("设计模式", MainWindow)
        action_design.setStatusTip("根据技能设计新套装")
        mode.addAction(action_design)
        action_compound = QtWidgets.QAction("合成模式", MainWindow)
        action_compound.setStatusTip("根据已有灵珠规划合珠路线")
        mode.addAction(action_compound)

        # 状态栏
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        MainWindow.setStatusBar(self.statusBar)

        self.central_widget = QtWidgets.QWidget(MainWindow)

        self.tb_hero = QtWidgets.QTextBrowser(self.central_widget)
        self.tb_hero.setGeometry(QtCore.QRect(20, 430, 280, 60))
        self.tb_skill = QtWidgets.QTextBrowser(self.central_widget)
        self.tb_skill.setGeometry(QtCore.QRect(310, 350, 280, 140))
        MainWindow.setCentralWidget(self.central_widget)

        self.init_titles()
        self.init_skill_bar()
        self.init_skill_table()
        self.init_color_bar()
        self.init_color_table()
        self.init_search_bar()

        self.skill_table.connect_skill_bar(self.skill_bar)
        self.skill_table.connect_skill_description(self.tb_skill)
        self.skill_bar.connect_table(self.skill_table)
        self.skill_bar.connect_color_bar(self.color_bar)
        self.skill_bar.connect_color_table(self.color_table)
        self.skill_bar.connect_hero_description(self.tb_hero)
        self.search_bar.connect_skill_table(self.skill_table)

    def init_titles(self):
        # 设置各模块标题
        self.label1 = TitleWidget.TitleLabel(self.central_widget, "配置技能")
        self.label1.setGeometry(QtCore.QRect(105, 10, 110, 30))
        self.label2 = TitleWidget.TitleLabel(self.central_widget, "可搭配技能")
        self.label2.setGeometry(QtCore.QRect(380, 10, 140, 30))
        self.label3 = TitleWidget.TitleLabel(self.central_widget, "刷珠武将")
        self.label3.setGeometry(QtCore.QRect(105, 390, 110, 30))
        self.label4 = TitleWidget.TitleLabel(self.central_widget, "技能描述")
        self.label4.setGeometry(QtCore.QRect(380, 310, 140, 30))

    def init_skill_bar(self):
        self.skill_bar = SkillBar.SkillBar(self.central_widget)

    def init_color_bar(self):
        self.color_bar = ColorBar.ColorBar(self.central_widget)

    def init_color_table(self):
        self.color_table = ColorTable.ColorTable(self.central_widget)

    def init_search_bar(self):
        self.search_bar = SearchBar.SearchBar(self.central_widget)

    def init_skill_table(self):
        # 设置可搭配技能列表
        config.data_hero = DataLoader.load_data('source/skill.xlsx', "武将技能")
        config.data_zuoyou = DataLoader.load_data('source/skill.xlsx', "左幽技能")
        self.skill_table = SkillTable.SkillTable(self.central_widget)

    def show_help(self):
        message_box = MessageWidget.CcMsgBox()
        text = "操作步骤：\n" \
               "1、点击7个按钮中的任意一个选择技能槽。\n" \
               "2、点击列表项设置技能。\n" \
               "3、系统将自动更新色链、色谱和成就武将信息。\n" \
               "4、切换技能槽时列表自动更新可配置技能。\n" \
               "补充：\n" \
               "1、白色珠表示任意珠子，其他颜色与游戏相同。\n" \
               "2、蓝色文字表示非成就珠，红色文字表示氪金珠。\n" \
               "3、按照色链搜索时，需严格遵守”红黄绿蓝“顺序，\n未使用的颜色请用”0“填充。\n" \
               "4、如果需要增加技能或修改技能信息，请直接修改skill.xlsx文件"
        message_box.about(caption=text, window_title="使用说明")

    def show_version(self):
        message_box = MessageWidget.CcMsgBox()
        message_box.about(caption="开发：无恒id\n版本号：v1.0.1", window_title="版本信息")

    def enable_collision(self):
        config.enable_collision = not config.enable_collision
        if self.skill_bar.cur_button != 7:
            rest_colors, names, collision = self.skill_bar.get_rest_colors()
            config.data_type = 'hero'
            self.skill_table.update_candidate_data(rest_colors, names, collision, config.data_type)
            self.skill_table.update_show_data()
            self.skill_table.update_items()
        else:
            config.data_type = 'zuoyou'
            self.skill_table.update_candidate_data(None, None, None, config.data_type)
            self.skill_table.update_show_data()
            self.skill_table.update_items()

    def enable_show_skill(self):
        config.show_skill = not config.show_skill
        if config.show_skill:
            self.color_table.visible_texts()
        else:
            self.color_table.unvisible_texts()
